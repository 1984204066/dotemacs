(require 'package)
;(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
;                         ("marmalade" . "http://marmalade-repo.org/packages/")
;                         ("melpa" . "http://melpa.milkbox.net/packages/")))

(setq package-enable-at-startup nil)
(setq package-archives '(("gnu"   . "http://mirrors.tuna.tsinghua.edu.cn/elpa/gnu/")
			 ("melpa" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/melpa/")))
(package-initialize)
(when (not package-archive-contents)
  (package-refresh-contents)
  (package-install 'use-package)) ;;保证use-package 能用
(require 'use-package)

;;很干脆的杀buffer,不想每次回答个 yes or no 之类的
(global-set-key (kbd "M-k") #'(lambda () (interactive) (kill-buffer (current-buffer)))) ;; #'不要也可以。
;(global-set-key "\C-xk" #'(lambda () (interactive) (kill-buffer (current-buffer))))
;; 不要总是没完没了的问yes or no, 为什么不能用y/n
(fset 'yes-or-no-p'y-or-n-p)

(setq default-buffer-file-coding-system 'utf-8)
(prefer-coding-system 'utf-8)
;;不显示GNU emacs启动界面
(setq inhibit-startup-message t)
;;菜单栏设置
(menu-bar-mode 1) ;;显示菜单栏
;;工具栏设置
;(tool-bar-mode -1) ;;不显示工具栏 工具栏太丑
;;滚动条设置
;(scroll-bar-mode -1) ;;不显示滚动条 太丑
(setq scroll-step 1);;每次一行一行向下翻
(setq-default cursor-type 'bar) ;;光标设为竖线

(setq make-backup-files nil) ;;关闭自动备份
;;(global-unset-key (kbd "M-o"))
;;(global-set-key (kbd "M-o") 'find-file)
;;(global-set-key (kbd "M-b") 'switch-to-buffer)
;;(global-set-key (kbd "C-s") 'isearch-forward)
;;(global-set-key (kbd "C-w") 'kill-region)
(global-set-key (kbd "M-r") 'replace-string)
(global-set-key (kbd "M-q") 'query-replace-string)
(global-set-key (kbd "M-g") 'goto-line)
(global-set-key (kbd "M-s") 'save-buffer)
(add-hook 'before-save-hook 'delete-trailing-whitespace)

(global-set-key (kbd "M-v") 'yank)
(global-set-key (kbd "C-2") 'set-mark-command)
(global-set-key (kbd "C-j") 'join-line)
(global-set-key (kbd "C-z") 'undo)
(global-set-key [f6] 'other-window)
;;(global-set-key [C-f7] 'toggle-frame-maximized)
(global-set-key [f7] 'delete-other-windows)
;; (global-set-key (kbd "C-<up>") (lambda () (interactive) (previous-line 5)))
;; (global-set-key (kbd "C-<down>") (lambda () (interactive) (next-line 5)))
(global-set-key (kbd "<C-M-left>") (lambda () (interactive) (insert "←")))
(global-set-key (kbd "<C-M-right>") (lambda () (interactive) (insert "→")))

(electric-indent-mode t) ;;自动缩进

;; https://github.com/emacs-jp/replace-colorthemes/
(use-package color-theme-modern
  :ensure t
  :demand
  :init
  (setq theme-name 'desert )  ;; 'comidia  , 'clarity , 'desert
  :config
  (load-theme theme-name t t)
  (enable-theme theme-name))

;; (use-package doom-themes
;;   :disabled t
;;   :init
;;   (setq doom-themes-enable-bold t
;;     doom-themes-enable-italic t)
;;   :config
;;   (load-theme 'doom-one t))

;; (use-package doom-modeline
;;   :ensure t
;;   :hook (after-init . doom-modeline-mode))

;;功能稍微好用于NumberedWindows http://nschum.de/src/emacs/window-numbering-mode/
(use-package window-numbering :defer 1
  :config
  (window-numbering-mode 1)) ;;采用M-x进行窗口导航切换 M-0切换到激活的minibuffer

(use-package windresize :defer 2
  :config
  (global-set-key (kbd "<C-M-S-left>") 'shrink-window-horizontally)
  (global-set-key (kbd "<C-M-S-right>") 'enlarge-window-horizontally)
  (global-set-key (kbd "<C-M-S-down>") 'shrink-window)
  (global-set-key (kbd "<C-M-S-up>") 'enlarge-window))

;; (use-package ace-pinyin
;; 	:config
;; 	(ace-pinyin-global-mode +1))
;; (use-package ace-window
;; 	:init
;; 	(progn
;; 	  (global-set-key [remap other-window] 'ace-window)
;; 	  (setq aw-keys '(?a ?s ?d ?f ?g ?h ?j ?k ?l))
;; 	  (custom-set-faces
;; 	   '(aw-leading-char-face
;; 		 ((t (:inhrit ace-jump-face-foreground :height 3.0)))))))

(use-package helm  ;; helm保证要安装上的，否则M-x没法用。
  :ensure t
  :bind (
     ("M-x". helm-M-x)
     ("M-o". helm-find-files)
     ("M-b" . helm-buffers-list)
     ([M-f7] . maximize-window)
     ("M-f" . helm-recentf)))

(use-package projectile
  :ensure t
  :bind-keymap ("\C-p" . projectile-command-map)  ;;default is?.
  :init (setq projectile-use-git-grep t)
  :config
  (projectile-global-mode)
  ;; (projectile-mode t)
  (setq ;projectile-cache-file (concat mage-cache-dir "projectile.cache")
    projectile-enable-caching t
    projectile-indexing-method 'alien
    ;projectile-known-projects-file (concat mage-cache-dir "projectile.projects")
    projectile-require-project-root t
    projectile-globally-ignored-file-suffixes '(".elc" ".pyc" ".o" ".Po")
    ;;projectile-globally-ignored-directories '(".deps")
    projectile-completion-system 'helm ;; 经常用ivy， https://www.jianshu.com/p/250301ebb7f9
    )
  (append '(".deps") projectile-globally-ignored-directories)
  (use-package helm-projectile :ensure t))

(show-paren-mode t) ;;显示匹配的括号
;; https://www.emacswiki.org/emacs/ElectricPair
;; A better solution may be skeleton-insert-pair-maybe (see AutoPairs).
(electric-pair-mode +1)  ;;(electric-pair-local-mode) Toggle ‘electric-pair-mode’ only in this buffer.
(global-set-key (kbd "C-<SPC>") 'forward-char)

(use-package smartparens
  :disabled t
  :init (smartparens-global-mode t)
  :config
  (sp-local-pair 'emacs-lisp-mode "'" nil :actions nil) ;; 写lisp的时候不希望成对补全
  (sp-local-pair 'lisp-interaction-mode "'" nil :actions nil))

;;智能括号自动补全 http://www.emacswiki.org/emacs/AutoPairs    ;;(require 'auto-pair+)
(use-package autopair
  :disabled t
  :config
  (autopair-global-mode 1) ;; 全局启用智能补全括号
  (global-set-key (kbd "C-<SPC>") 'forward-char))

;;智能括号匹配高亮 http://www.emacswiki.org/emacs/HighlightParentheses
(use-package highlight-parentheses
  :disabled t
  :config
  ;;使autopair模式和highlight-parentheses集成交互使用
  (add-hook 'highlight-parentheses-mode-hook
        '(lambda ()
           (setq autopair-handle-action-fns
             (append
              (if autopair-handle-action-fns
              autopair-handle-action-fns
            '(autopair-default-handle-action))
              '((lambda (action pair pos-before)
          (hl-paren-color-update)))))))
  (global-highlight-parentheses-mode t)
  (setq show-paren-style 'parentheses))    ;括号匹配显示但不是烦人的跳到另一个括号。

;; https://robert.kra.hn/posts/2021-02-07_rust-with-emacs/
(use-package rustic
  :ensure
  :bind (:map rustic-mode-map
              ("M-j" . lsp-ui-imenu)
              ("M-?" . lsp-find-references)
              ("C-c C-c l" . flycheck-list-errors)
              ("C-c C-c a" . lsp-execute-code-action)
              ("C-c C-c r" . lsp-rename)
              ("C-c C-c q" . lsp-workspace-restart)
              ("C-c C-c Q" . lsp-workspace-shutdown)
              ("C-c C-c s" . lsp-rust-analyzer-status))
  :config
  ;; uncomment for less flashiness
  ;; (setq lsp-eldoc-hook nil)
  ;; (setq lsp-enable-symbol-highlighting nil)
  ;; (setq lsp-signature-auto-activate nil)

  ;; comment to disable rustfmt on save
  (setq rustic-format-on-save t)
  (add-hook 'rustic-mode-hook 'rk/rustic-mode-hook))

(defun rk/rustic-mode-hook ()
  ;; so that run C-c C-c C-r works without having to confirm
  (setq-local buffer-save-without-query t))

(use-package lsp-mode
  :ensure
  :commands lsp
  :custom
  ;; what to use when checking on-save. "check" is default, I prefer clippy
  (lsp-rust-analyzer-cargo-watch-command "clippy")
  (lsp-eldoc-render-all t)
  (lsp-idle-delay 0.6)
  (lsp-rust-analyzer-server-display-inlay-hints t)
  :config
  (add-hook 'lsp-mode-hook 'lsp-ui-mode))

(use-package lsp-ui
  :ensure
  :commands lsp-ui-mode
  :custom
  (lsp-ui-peek-always-show t)
  (lsp-ui-sideline-show-hover t)
  (lsp-ui-doc-enable nil))

(use-package company
  :ensure
  :custom
  (company-idle-delay 0.5) ;; how long to wait until popup
  ;; (company-begin-commands nil) ;; uncomment to disable popup
  :bind
  (:map company-active-map
	      ("C-n". company-select-next)
	      ("C-p". company-select-previous)
	      ("M-<". company-select-first)
	      ("M->". company-select-last))
  (:map company-mode-map
	("<tab>". tab-indent-or-complete)
	("TAB". tab-indent-or-complete)))

(defun company-yasnippet-or-completion ()
  (interactive)
  (or (do-yas-expand)
      (company-complete-common)))

(defun check-expansion ()
  (save-excursion
    (if (looking-at "\\_>") t
      (backward-char 1)
      (if (looking-at "\\.") t
        (backward-char 1)
        (if (looking-at "::") t nil)))))

(defun do-yas-expand ()
  (let ((yas/fallback-behavior 'return-nil))
    (yas/expand)))

(defun tab-indent-or-complete ()
  (interactive)
  (if (minibufferp)
      (minibuffer-complete)
    (if (or (not yas/minor-mode)
            (null (do-yas-expand)))
        (if (check-expansion)
            (company-complete-common)
          (indent-for-tab-command)))))

(use-package yasnippet
  :ensure
  :config
  (yas-reload-all)
  (add-hook 'prog-mode-hook 'yas-minor-mode)
  (add-hook 'text-mode-hook 'yas-minor-mode))

;;https://github.com/AndreaCrotti/yasnippet-snippets/tree/master
(use-package yasnippet-snippets
  :ensure
  :config (require 'yasnippet))

(use-package flycheck :ensure)

(use-package exec-path-from-shell
  :ensure
  :init (exec-path-from-shell-initialize))

(use-package dap-mode
  :ensure
  :config
  (dap-ui-mode)
  (dap-ui-controls-mode 1)

  (require 'dap-lldb)
  (require 'dap-gdb-lldb)
  ;; installs .extension/vscode
  (dap-gdb-lldb-setup)
  (dap-register-debug-template
   "Rust::LLDB Run Configuration"
   (list :type "lldb"
         :request "launch"
         :name "LLDB::Run"
	 :gdbpath "rust-lldb"
         :target nil
         :cwd nil)))

;; http://tuhdo.github.io/c-ide.html
;; (use-package ggtags
;;   :ensure t
;;   :bind (:map ggtags-mode-map
;;   ("C-c g s" . 'ggtags-find-other-symbol)
;;   ("C-c g h" . 'ggtags-view-tag-history)
;;   ("C-c g r" . 'ggtags-find-reference)
;;   ("C-c g f" . 'ggtags-find-file)
;;   ("C-c g c" . 'ggtags-create-tags)
;;   ("C-c g u" . 'ggtags-update-tags))
;;   :config  ;;(ggtags-mode 1) 好像没啥用, 必须加到 c-mode-common-hook里面
;;   (add-hook 'c-mode-common-hook
;;         (lambda ()
;;           (when (derived-mode-p 'c-mode 'c++-mode 'java-mode 'asm-mode)
;;         (ggtags-mode 1)))))

;; https://www.cnblogs.com/lance-ehf/p/4449410.html
;;;; CC-mode配置  http://cc-mode.sourceforge.net/
(require 'cc-mode)
(c-set-offset 'inline-open 0)
(c-set-offset 'friend '-)
(c-set-offset 'substatement-open 0)
;;;;我的C/C++语言编辑策略

(defun my-c-mode-common-hook()
  (setq tab-width 4 indent-tabs-mode nil)
  ;;; hungry-delete and auto-newline
  (c-toggle-auto-hungry-state 1)
  ;;按键定义
  (define-key c-mode-base-map [(control \`)] 'hs-toggle-hiding)
  (define-key c-mode-base-map [(return)] 'newline-and-indent)
  (define-key c-mode-base-map [(C-f7)] 'compile)
  (define-key c-mode-base-map [(meta \`)] 'c-indent-command)
;;  (define-key c-mode-base-map [(tab)] 'hippie-expand)
 ; (define-key c-mode-base-map [(tab)] 'my-indent-or-complete)
 ; (define-key c-mode-base-map [(meta ?/)] 'semantic-ia-complete-symbol-menu)
  ;;预处理设置
  (setq c-macro-shrink-window-flag t)
  (setq c-macro-preprocessor "cpp")
  (setq c-macro-cppflags " ")
  (setq c-macro-prompt-flag t)
  (setq hs-minor-mode t)
  (setq abbrev-mode t)
;;  (ggtags-mode 1)
)
(add-hook 'c-mode-common-hook 'my-c-mode-common-hook)

;;;;我的C++语言编辑策略
(defun my-c++-mode-hook()
  (setq tab-width 4 indent-tabs-mode nil)
  (c-set-style "stroustrup")
;;  (define-key c++-mode-map [f3] 'replace-regexp)
)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   '(spaceline-all-the-icons helm-projectile ggtags projectile helm doom-modeline color-theme-modern use-package))
 '(show-paren-mode t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Source Code Pro" :foundry "ADBO" :slant normal :weight normal :height 181 :width normal)))))
